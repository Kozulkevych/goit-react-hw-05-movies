{"version":3,"file":"static/js/983.7b960840.chunk.js","mappings":"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","sources":["components/Button/Button.styled.jsx","components/Button/Button.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/HomePage.jsx","services/moviesApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Btn = styled.button`\n  border-radius: 6px;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 20px auto;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 180px;\n  :hover,\n  :focus {\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\n  }\n`;\n","import { Btn } from './Button.styled';\nimport PropTypes from 'prop-types';\n\nexport const Button = ({ type = 'button', onClick, text }) => {\n  return (\n    <Btn type={type} onClick={onClick}>\n      {text}\n    </Btn>\n  );\n};\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const LoaderStyled = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.5);\n  z-index: 1;\n`;\n","import { RotatingLines } from 'react-loader-spinner';\nimport { LoaderStyled } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <LoaderStyled>\n      <RotatingLines\n        strokeColor=\"grey\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        visible={true}\n      />\n    </LoaderStyled>\n  );\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const ListMovies = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n  max-width: 1200px;\n  margin: 0 auto;\n  justify-content: center;\n`;\n\nexport const LinkMovie = styled(Link)`\n  display: block;\n  text-decoration: none;\n  width: 260px;\n  font-size: 16px;\n  font-weight: 700;\n  color: #0d253f;\n`;\n\nexport const ItemMovies = styled.li`\n  text-align: center;\n  justify-content: center;\n  position: relative;\n  background-color: #e1dfde;\n  border-radius: 8px;\n  transform: scale(1);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n    cursor: pointer;\n    transform: scale(1.03);\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\n  }\n`;\n\nexport const ImageMovies = styled.img`\n  width: 100%;\n  display: block;\n`;\nexport const TitleMovie = styled.p`\n  display: flex;\n  font-size: 16px;\n  margin: 0;\n  padding: 15px;\n  justify-content: center;\n  text-align: center;\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport defaultPoster from 'image/default_poster.jpg';\nimport {\n  ListMovies,\n  ItemMovies,\n  ImageMovies,\n  LinkMovie,\n  TitleMovie,\n} from './MoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <>\n      <ListMovies>\n        {movies.map(({ id, poster_path, title }) => {\n          const base_url = 'https://image.tmdb.org/t/p/w500';\n          return (\n            <ItemMovies key={id}>\n              <LinkMovie to={`/movies/${id}`} state={{ from: location }}>\n                <ImageMovies\n                  src={\n                    poster_path ? `${base_url}${poster_path}` : defaultPoster\n                  }\n                  alt={title}\n                />\n                <TitleMovie>{`${title}`}</TitleMovie>\n              </LinkMovie>\n            </ItemMovies>\n          );\n        })}\n      </ListMovies>\n    </>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n","import React, { useState, useEffect } from 'react';\nimport { getTrending } from 'services/moviesApi';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { Button } from 'components/Button/Button';\nimport { Loader } from 'components/Loader/Loader';\nimport { Outlet } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState(null);\n  const [page, setPage] = useState(1);\n  const [isloading, setIsLoading] = useState(false);\n\n  // function fetchMovies(page) {\n  //   getTrending(page).then(setMovies);\n  // }\n  // useEffect(() => {\n  //   fetchMovies(page);\n  // }, [page]);\n  useEffect(() => {\n    const fetchMovies = async () => {\n      setIsLoading(true);\n      try {\n        const result = await getTrending(page);\n        setMovies(result);\n      } catch (error) {\n        toast.error('Sorry, there was an error, please try again later');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovies();\n  }, [page]);\n\n  const loadMore = () => {\n    setPage(page => page + 1);\n  };\n\n  return (\n    movies && (\n      <>\n        <h1>TRENDING TODAY</h1>\n        {isloading && <Loader />}\n        <MoviesList movies={movies} />\n        <Button text=\"Load more\" onClick={loadMore} />\n        <Outlet />\n      </>\n    )\n  );\n};\n\nexport default HomePage;\n","import axios from 'axios';\n\nconst KEY = '6e14e7f7adc702d050e16bca3452efd9';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\naxios.defaults.baseURL = BASE_URL;\n\nexport async function getTrending(page) {\n  const { data } = await axios(`trending/movie/day`, {\n    params: { api_key: KEY, page },\n  });\n  return data.results;\n}\n\nexport async function getSearchMovies(query, page) {\n  const { data } = await axios('search/movie', {\n    params: { api_key: KEY, query, page },\n  });\n  return data.results;\n}\n\nexport async function getMovieDetails(id) {\n  const { data } = await axios(`movie/${id}`, {\n    params: { api_key: KEY },\n  });\n  return data;\n}\n\nexport async function getMovieCredits(id) {\n  const { data } = await axios(`movie/${id}/credits`, {\n    params: { api_key: KEY },\n  });\n  return data.cast;\n}\n\nexport async function getMovieReviews(id) {\n  const { data } = await axios(`movie/${id}/reviews`, {\n    params: { api_key: KEY },\n  });\n  return data.results;\n}\n"],"names":["Btn","styled","Button","type","onClick","text","LoaderStyled","Loader","strokeColor","strokeWidth","animationDuration","width","visible","ListMovies","LinkMovie","Link","ItemMovies","ImageMovies","TitleMovie","MoviesList","movies","location","useLocation","map","id","poster_path","title","to","state","from","src","defaultPoster","alt","useState","setMovies","page","setPage","isloading","setIsLoading","useEffect","fetchMovies","getTrending","result","toast","KEY","axios","params","api_key","data","results","getSearchMovies","query","getMovieDetails","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}