{"version":3,"file":"static/js/55.f5f09215.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","components/Pages/SearchPages.jsx","services/moviesApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LoaderStyled = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.5);\n  z-index: 1;\n`;\n","import { RotatingLines } from 'react-loader-spinner';\nimport { LoaderStyled } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <LoaderStyled>\n      <RotatingLines\n        strokeColor=\"grey\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        visible={true}\n      />\n    </LoaderStyled>\n  );\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const ListMovies = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n  max-width: 1200px;\n  margin: 0 auto;\n  justify-content: center;\n`;\n\nexport const LinkMovie = styled(Link)`\n  display: block;\n  text-decoration: none;\n  width: 260px;\n  font-size: 16px;\n  font-weight: 700;\n  color: #0d253f;\n`;\n\nexport const ItemMovies = styled.li`\n  text-align: center;\n  justify-content: center;\n  position: relative;\n  background-color: #e1dfde;\n  border-radius: 8px;\n  transform: scale(1);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n    cursor: pointer;\n    transform: scale(1.03);\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\n  }\n`;\n\nexport const ImageMovies = styled.img`\n  width: 100%;\n  display: block;\n`;\nexport const TitleMovie = styled.p`\n  display: flex;\n  font-size: 16px;\n  margin: 0;\n  padding: 15px;\n  justify-content: center;\n  text-align: center;\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport defaultPoster from 'image/default_poster.jpg';\nimport {\n  ListMovies,\n  ItemMovies,\n  ImageMovies,\n  LinkMovie,\n  TitleMovie,\n} from './MoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <>\n      <ListMovies>\n        {movies.map(({ id, poster_path, title }) => {\n          const base_url = 'https://image.tmdb.org/t/p/w500';\n          return (\n            <ItemMovies key={id}>\n              <LinkMovie to={`/movies/${id}`} state={{ from: location }}>\n                <ImageMovies\n                  src={\n                    poster_path ? `${base_url}${poster_path}` : defaultPoster\n                  }\n                  alt={title}\n                />\n                <TitleMovie>{`${title}`}</TitleMovie>\n              </LinkMovie>\n            </ItemMovies>\n          );\n        })}\n      </ListMovies>\n    </>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n    })\n  ),\n};\n","import styled from 'styled-components';\n\nexport const FormSearch = styled.form`\n  display: flex;\n  gap: 10px;\n  justify-content: center;\n  padding: 20px 50px;\n  margin-bottom: 30px;\n  align-items: center;\n  overflow: hidden;\n`;\n\nexport const InputSearch = styled.input`\n  display: inline-block;\n  width: 100%;\n  font-size: 18px;\n  padding: 8px;\n  border-radius: 8px;\n  outline: none;\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const BtnSearch = styled.button`\n  border-radius: 6px;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0 auto;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  padding: 8px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 180px;\n  :hover,\n  :focus {\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\n  }\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormSearch, InputSearch, BtnSearch } from './SearchForm.styled';\nimport { toast } from 'react-toastify';\n\nexport const SearchForm = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleChangeSearch = e => {\n    setQuery(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmitSearch = e => {\n    e.preventDefault();\n\n    if (query.trim() === '') {\n      toast.error(\"The search string can't be an empty\");\n      return;\n    }\n\n    onSubmit(query);\n    setQuery('');\n  };\n\n  return (\n    <FormSearch onSubmit={handleSubmitSearch} autoComplete=\"on\">\n      <InputSearch\n        type=\"text\"\n        name=\"search\"\n        value={query}\n        onChange={handleChangeSearch}\n      />\n      <BtnSearch type=\"submit\">Search</BtnSearch>\n    </FormSearch>\n  );\n};\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\nimport { Loader } from 'components/Loader/Loader';\nimport { getSearchMovies } from 'services/moviesApi';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\n\nconst SearchPage = () => {\n  const [movies, setMovies] = useState(null);\n  const [isloading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    const fetchMovies = async () => {\n      setIsLoading(true);\n      try {\n        const result = await getSearchMovies(query);\n        if (result.length <= 0) {\n          return toast.error(`Sorry, no movies with title \"${query}\" found`);\n        }\n        setMovies(result, 1);\n      } catch (error) {\n            toast.error('Sorry, there was an error, please try again later');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovies();\n  }, [query]);\n\n  const handleSearchFormSubmit = query => {\n    setSearchParams({ query });\n  };\n  return (\n    <>\n          <main>\n                 {isloading && <Loader />}\n              <SearchForm onSubmit={handleSearchFormSubmit} />\n              {movies && <MoviesList movies={movies} />}\n      </main>\n    </>\n  );\n};\n\nexport default SearchPage;","import axios from 'axios';\n\nconst KEY = '6e14e7f7adc702d050e16bca3452efd9';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\naxios.defaults.baseURL = BASE_URL;\n\nexport async function getTrending(page) {\n  const { data } = await axios(`trending/movie/day`, {\n    params: { api_key: KEY, page },\n  });\n  return data.results;\n}\n\nexport async function getSearchMovies(query, page) {\n  const { data } = await axios('search/movie', {\n    params: { api_key: KEY, query, page },\n  });\n  return data.results;\n}\n\nexport async function getMovieDetails(id) {\n  const { data } = await axios(`movie/${id}`, {\n    params: { api_key: KEY },\n  });\n  return data;\n}\n\nexport async function getMovieCredits(id) {\n  const { data } = await axios(`movie/${id}/credits`, {\n    params: { api_key: KEY },\n  });\n  return data.cast;\n}\n\nexport async function getMovieReviews(id) {\n  const { data } = await axios(`movie/${id}/reviews`, {\n    params: { api_key: KEY },\n  });\n  return data.results;\n}\n"],"names":["LoaderStyled","styled","Loader","strokeColor","strokeWidth","animationDuration","width","visible","ListMovies","LinkMovie","Link","ItemMovies","ImageMovies","TitleMovie","MoviesList","movies","location","useLocation","map","id","poster_path","title","to","state","from","src","defaultPoster","alt","FormSearch","InputSearch","BtnSearch","SearchForm","onSubmit","useState","query","setQuery","e","preventDefault","trim","toast","autoComplete","type","name","value","onChange","currentTarget","toLowerCase","setMovies","isloading","setIsLoading","useSearchParams","searchParams","setSearchParams","get","useEffect","fetchMovies","getSearchMovies","result","length","KEY","getTrending","page","axios","params","api_key","data","results","getMovieDetails","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}